body {
    font-family: "Open Sans", sans-serif;
    background-color: var(--bg-color);
}

.centerel-vert {
    display: flex;
    flex-direction: column;
}
.centerel-vert > .before:not([disable]) { display: block; flex: 1 1 0px; }
.centerel-vert > .after:not([disable]) { display: block; flex: 1 1 0px; }
.centerel-vert > .center { display: block; }

@media (max-aspect-ratio: 1/1), (orientation: portrait) {
    .collapsable {
        visibility: collapse;
        display: none;
    }
}

.h-text {
    display: flex;
    flex: 1 1 auto;
    flex-direction: column;
    justify-content: end;
    align-items: center;

    padding-bottom: 0.3rem;
    padding-top: 0.3rem;
}

#file-picker {
    cursor: pointer;
    margin: 0 auto;
    max-width: max(30rem, 100vh);
    text-align: center;
    word-wrap: break-word;
    font-family: sans-serif;
    color: var(--hint-color);
    font-size: 1.9rem;
}

#file-info > .content {
    opacity: 0;
    transition: opacity 100ms;
}
#file-info[data-visible=true] > .content {
    opacity: 1;
    transition: opacity 100ms;
}

#file-type { color: var(--secondary-text-color); }
#filename { color: var(--link-color); }
#delete-file {
    background: none;
    border: none;
    outline: none;
    padding: 0px;
    margin: 0px;
    cursor: pointer;
}
#delete-file > svg {
    height: 0.7rem;

    stroke: var(--secondary-text-color);
    stroke-width: 1.7;
    stroke-linecap: round;
}

#is-pdf {
    position: relative;
    color: #ffd100;
    font: sans-serif; /* Open Sans bold not included */
    font-weight: bold;
}

#is-pdf::before {
    content: '';
    position: absolute;
    top: -0.75em;
    bottom: -0.75em;
    left: -1.25em;
    right: -1.25em;
    cursor: help;
}

#status {
    opacity: 0;
    transition: opacity 100ms;
}

#warning {
    max-width: min(45rem, 90vw);
    margin: 0 auto;
    color: var(--hint-color);
    opacity: 0;
    transition: opacity 100ms;
}

.group-bar-formatting {
    width: min(30rem, 90vw);
    margin: 0 auto;
}

.progress-bar-height { height: 0.2rem; }

@keyframes start-pending {
    --scale: 0.5rem;
    from { background-position: 0 0; }
    to { background-position: calc(4.619*var(--scale)) calc(8.0 * var(--scale)); }
}

#group-bar {
    position: relative;
    display: flex;
    flex-direction: column;
    align-items: stretch;
    margin-top: 0.3em;
    margin-bottom: 0.3em;

    background-color: var(--bg2-color);

    border-radius: 999999px;
    border: 0px solid transparent;
    box-shadow: 0px 0px var(--shadow2-size) 0px var(--shadow2-color);
}

#group-bar:hover, #group-bar:focus-within { outline: 1px solid var(--outline-color); }

#group-input {
        color-scheme: light dark;
        width: 100%;
        flex: 1 1 0px;
        appearance: none; border: none; outline: none;
        margin: 0.1rem 0px 0.1rem;
        color: var(--text-color);
        background: none; /*default is white*/
        font-size: 1.3em;
    }

.centerel-vert .group-bar-icon {
    margin: auto 0;
    margin-left: 0.5rem;
    border: 0px solid transparent;
    border-radius: 999999px;
}

.centerel-vert .group-bar-icon > svg {
    cursor: pointer;
    border: inherit;
    border-radius: inherit;
    overflow: hidden;

    display: block;
    height: 1.4rem;
    width: auto;
    fill: var(--text-color);
    padding: 0.4rem;
}

.centerel-vert .group-bar-icon:hover > svg {
    background-color: var(--bg-hover-text);
}

 #group-bar #start-button > svg {
    stroke-width: 5%;
}
#group-bar #start-button:not([data-pending]) > svg {
    fill: var(--primary-color);
    stroke: var(--primary-color);
}
#group-bar #start-button[data-pending] > svg {
    fill: var(--primary-contrast-color);
    stroke: var(--primary-contrast-color);

    --color1: var(--bg1-startbutton);
    --color2: var(--bg2-startbutton);
    --scale: 0.5rem;
    --blur: 6%;
    background-image: linear-gradient(
        120deg,
        var(--color1) calc(12.5% - var(--blur)),
        var(--color2) calc(12.5% + var(--blur)),
        var(--color2) calc(37.5% - var(--blur)),
        var(--color1) calc(37.5% + var(--blur)),
        var(--color1) calc(62.5% - var(--blur)),
        var(--color2) calc(62.5% + var(--blur)),
        var(--color2) calc(87.5% - var(--blur)),
        var(--color1) calc(87.5% + var(--blur))
    );
    background-size: calc(4.619*var(--scale)) calc(8.0 * var(--scale));
    animation: start-pending 1s linear infinite;

}

#group-bar #start-button[data-pending]:hover { filter: brightness(115%); }

#group-bar #generation-settings[data-pressed=true] > svg {
        fill: var(--primary-contrast-color);
        background-color: var(--primary-color);
}

#group-bar #generation-settings[data-pressed=true] > svg:hover { filter: brightness(110%); }

#group-bar #progress-bar {
    border: 0px solid transparent;
    border-radius: 999999px;
    width: 0%;
}

#group-bar #progress-bar[data-transition=true] { transition: width 100ms; }

#group-bar > .group-bar-double {
    position: absolute;
    top: 0; bottom: 0; right: 0; left: 0;

    visibility: hidden;
    overflow: clip;
    contain: strict;

    border-radius: inherit;
    border: inherit;

    display: flex;
    flex-direction: column-reverse;
}
#group-bar > .group-bar-double > * {
    visibility: visible;
}

#group-bar .gen-settings-switch {
    display: flex;
    justify-content: stretch;
    cursor: pointer;
}

#group-bar .gen-settings-switch > * {
    display: flex;
    align-items: center;

    border: 0px solid transparent;
    border-radius: 999999px 0px 0px 999999px;

    background: var(--hint-color-0);
    transition: background 0.2s, transform 0.2s;
    transition-timing-function: ease-out;
}

@media (hover: hover) {
    #group-bar .gen-settings-switch:hover > * {
        transform: translateX(-0.1rem);
        background: var(--hint-color-50);
    }
}

#group-bar .gen-settings-switch svg {
    transform: rotate(270deg);
    width: 1.4rem;
    height: 1.4em;
    fill: none;
    stroke: var(--primary-contrast-color);
    stroke-width: 0.2;
    stroke-linecap: round;
}

#group-bar .gen-settings-switch.gen-settings-next {
    transform: rotate(180deg);
}

#outputs {
    margin: 0 auto;
    display: flex;
    flex-wrap: wrap;
    row-gap: 3rem;
    column-gap: 3rem;
    padding-left: 1.5em;
    padding-right: 1.5em;
    justify-content: center;
    align-items: flex-start;
}

#open-data-usage {
    position: fixed;
    left: 0; bottom: 0;

    margin-left: 0.5em;
    align-items: stretch;
    overflow: hidden;

    background: var(--bg2-color);
    border: 0px solid transparent;
    border-radius: 999px 999px 0px 0px;
    box-shadow: 0px 0px var(--shadow1-size) 0px var(--shadow2-color);

    cursor: pointer;
}

#open-data-usage[data-transition] { transition: transform 100ms; }
#open-data-usage:not([data-visible=true]) { transform: translateY(calc(100% + 0.3rem + 1px)) }

#open-data-usage > * {
    height: 1em;
    padding: 0.3em;
    padding-bottom: 0.1em;
}

#open-data-usage > * > svg {
    height: 100%;

    fill: none;
    stroke: var(--primary-color);
    stroke-width: 0.2;
    stroke-linecap: round;
}

#open-data-usage[data-usage-accepted=false] svg {
    stroke: var(--error-color);
}

#open-data-usage:hover > * {
    background: var(--bg-hover-text);
}

.data-usage {
    position: fixed;
    bottom: 0; left: 0;
    z-index: 2000;

    width: 15rem;
    box-sizing: border-box;
    padding: 1em;
    padding-left: 0px;
    padding-top: 0px;

    @media (width < 30rem) {
         width: 100%;
    }

    background: var(--bg2-color);
    border: 0px solid transparent;
    border-radius: 0.6em 0.6em 0px 0px;
    box-shadow: 0px 0px var(--shadow2-size) 0px var(--shadow1-color);

    font-size: 0.75em;
}

.data-usage[data-transition] { transition: transform 400ms; }
.data-usage:not([data-visible=true]) { transform: translateY(calc(100% + 0.3rem + 1px)); }

.data-usage > .close-button {
    float: left;
    padding-top: 0.3em;
    padding-left: 0.3em;
    padding-right: 0.3em;
    cursor: pointer;
}

.data-usage > .close-button > * {
    width: 2em; height: 2em;
    pointer-events: none;
}

.data-usage > .close-button > * > svg {
    width: 100%;
    stroke: #808080;
    stroke-width: 1;
    stroke-linecap: round;
}

.data-usage > .close-button:hover svg { stroke: var(--text-color); }

.data-usage > span {
    display: block;
    margin-top: 1em;
    margin-left: 1em;
    color: var(--text-color);

    cursor: pointer;
}

 .data-usage > span:hover {
     text-decoration: underline
 }

#drop-zone {
    position: fixed;
    top: 0; left: 0; right: 0; bottom: 0;
    padding: 2vmin 2vmin 2vmin 2vmin;
    z-index: 999999;

    background-color: var(--error-color-20);
    transition: visibility 150ms, opacity 150ms;
}

 #drop-zone > * {
    box-sizing: border-box;

    border-radius: 3vmin;
    border: 1vmin dashed white;

    width: 100%;
    height: 100%;

    display: flex;
    align-items: center;
    justify-content: center;
}

 #drop-zone > * > * {
     width: 25%;
     height: 25%;
 }
